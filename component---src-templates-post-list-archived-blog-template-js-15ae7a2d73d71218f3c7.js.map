{"version":3,"file":"component---src-templates-post-list-archived-blog-template-js-15ae7a2d73d71218f3c7.js","mappings":"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","sources":["webpack://blog/./src/templates/post-list-archived-blog-template.js","webpack://blog/./node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","webpack://blog/./node_modules/@mui/material/CardActionArea/CardActionArea.js","webpack://blog/./node_modules/@mui/material/Card/cardClasses.js","webpack://blog/./node_modules/@mui/material/Card/Card.js","webpack://blog/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://blog/./node_modules/@mui/material/CardContent/CardContent.js","webpack://blog/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://blog/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://blog/./src/components/PostList/PostList.js","webpack://blog/./node_modules/@mui/icons-material/esm/Info.js","webpack://blog/./node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","webpack://blog/./node_modules/@mui/material/SnackbarContent/SnackbarContent.js","webpack://blog/./src/components/ArchivedBlogTips/ArchivedBlogTips.js","webpack://blog/./src/constants/pagination.js","webpack://blog/./src/components/Pagination/Pagination.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Pagination from \"../components/Pagination\";\nimport { useSiteMetadata } from \"../hooks\";\nimport ArchivedBlogTips from \"../components/ArchivedBlogTips\";\nimport PostList from \"../components/PostList\";\nimport { Box } from \"@mui/material\";\n\nconst PostListTemplate = ({ data, pageContext }) => {\n  const { archivedBlogUrl } = useSiteMetadata();\n  const { prevPagePath, nextPagePath } = pageContext;\n\n  return (\n    <Layout>\n      <Box mb={3}>\n        <ArchivedBlogTips originLink={archivedBlogUrl} />\n      </Box>\n      <PostList\n        nodes={data.allArchivedBlogPostJson.nodes.map((node) => ({\n          fields: {\n            slug: node.path,\n            categorySlugs: (node.categories || []).map(\n              (category) => category.path\n            ),\n          },\n          frontmatter: {\n            title: node.title,\n            date: node.date,\n            categories: (node.categories || []).map(\n              (category) => category.name\n            ),\n            description: node.excerpt,\n            featured_media: node.featured_media,\n          },\n        }))}\n      />\n      <Pagination\n        prevPageName={prevPagePath ? \"\" : \"最近文章\"}\n        prevPagePath={prevPagePath ? prevPagePath : \"/page\"}\n        nextPagePath={nextPagePath}\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostListArchivedBlogTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allArchivedBlogPostJson(\n      limit: $postsLimit\n      skip: $postsOffset\n      sort: { date: DESC }\n    ) {\n      nodes {\n        date\n        excerpt\n        path\n        title\n        categories {\n          name\n          path\n        }\n        featured_media {\n          childImageSharp {\n            gatsbyImageData(\n              width: 200\n              height: 200\n              placeholder: BLURRED\n              transformOptions: { cropFocus: CENTER }\n              layout: FIXED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostListTemplate;\n\nexport const Head = ({ pageContext }) => {\n  const { title: siteTitle } = useSiteMetadata();\n  const { currentPage } = pageContext;\n  const pageTitle =\n    currentPage > 0\n      ? `存档文章 - 第 ${currentPage} 页 - ${siteTitle}`\n      : siteTitle;\n\n  return <title>{pageTitle}</title>;\n};\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from \"./cardActionAreaClasses.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n})));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n})));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n    children,\n    className,\n    focusVisibleClassName,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, {\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport {\n  CardActionArea,\n  Card,\n  Box,\n  CardContent,\n  Typography,\n  CardMedia,\n  styled,\n} from \"@mui/material\";\nimport { getSrc } from \"gatsby-plugin-image\";\n\nconst PREFIX = \"PostList\";\n\nconst classes = {\n  cardActionArea: `${PREFIX}-cardActionArea`,\n  card: `${PREFIX}-card`,\n  cardDetails: `${PREFIX}-cardDetails`,\n  cardMedia: `${PREFIX}-cardMedia`,\n  date: `${PREFIX}-date`,\n  category: `${PREFIX}-category`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled(\"div\")(({ theme }) => ({\n  [`& .${classes.cardActionArea}`]: {\n    marginBottom: theme.spacing(3),\n  },\n\n  [`& .${classes.card}`]: {\n    display: \"flex\",\n  },\n\n  [`& .${classes.cardDetails}`]: {\n    flex: 1,\n  },\n\n  [`& .${classes.cardMedia}`]: {\n    width: 200,\n  },\n\n  [`& .${classes.date}`]: {\n    marginRight: theme.spacing(1),\n  },\n\n  [`& .${classes.category}`]: {\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nconst PostList = ({ nodes }) => {\n  return (\n    <Root>\n      {nodes.map((node) => (\n        <CardActionArea\n          component={GatsbyLink}\n          to={node.fields.slug}\n          key={node.fields.slug}\n          className={classes.cardActionArea}\n        >\n          <Card className={classes.card}>\n            <Box className={classes.cardDetails}>\n              <CardContent>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  className={classes.date}\n                  display=\"inline\"\n                >\n                  {format(new Date(node.frontmatter.date), \"yyyy-MM-dd\")}\n                </Typography>\n                {node.frontmatter.categories.map((category) => (\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    display=\"inline\"\n                    className={classes.category}\n                    key={category}\n                  >\n                    {category}\n                  </Typography>\n                ))}\n                <Typography component=\"h2\" variant=\"h5\">\n                  {node.frontmatter.title}\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"p\">\n                  {node.frontmatter.description || node.excerpt}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"primary\">\n                  阅读\n                </Typography>\n              </CardContent>\n            </Box>\n            {node.frontmatter.featured_media && (\n              <CardMedia\n                className={classes.cardMedia}\n                image={getSrc(\n                  node.frontmatter.featured_media.childImageSharp\n                    .gatsbyImageData\n                )}\n                title={node.frontmatter.title}\n                sx={{ display: { xs: \"none\", sm: \"block\" } }}\n              />\n            )}\n          </Card>\n        </CardActionArea>\n      ))}\n    </Root>\n  );\n};\n\nexport default PostList;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getSnackbarContentUtilityClass } from \"./snackbarContentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    ...theme.typography.body2,\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  };\n}));\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n    action,\n    className,\n    message,\n    role = 'alert',\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, {\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Link from \"@mui/material/Link\";\nimport SnackbarContent from \"@mui/material/SnackbarContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { blue } from \"@mui/material/colors\";\nimport { useTheme } from \"@mui/material/styles\";\n\nconst ArchivedBlogTips = ({ originLink }) => {\n  const theme = useTheme();\n\n  return (\n    <SnackbarContent\n      elevation={0}\n      sx={{\n        display: \"block\",\n        backgroundColor: blue[500],\n      }}\n      message={\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <InfoIcon\n            sx={{\n              fontSize: 20,\n              opacity: 0.9,\n              marginRight: theme.spacing(1),\n            }}\n          />\n          <Typography variant={\"body2\"} noWrap sx={{ maxWidth: \"90%\" }}>\n            {\"这是旧博客文章存档，原页面: \"}\n            <Link\n              href={originLink}\n              target={\"_blank\"}\n              rel=\"noopener\"\n              color={\"inherit\"}\n            >\n              {originLink}\n            </Link>\n          </Typography>\n        </Box>\n      }\n    />\n  );\n};\n\nexport default ArchivedBlogTips;\n","const PAGINATION = {\n  PREV_PAGE: '上一页',\n  NEXT_PAGE: '下一页',\n}\n\nexport default PAGINATION\n","import React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport { PAGINATION } from \"../../constants\";\nimport { Link, Grid2, styled } from \"@mui/material\";\n\nconst PREFIX = \"Pagination\";\n\nconst classes = {\n  nextNav: `${PREFIX}-nextNav`,\n};\n\nconst StyledGrid = styled(Grid2)(({ theme }) => ({\n  [`& .${classes.nextNav}`]: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst Pagination = ({\n  prevPageName,\n  nextPageName,\n  prevPagePath,\n  nextPagePath,\n}) => {\n  return (\n    <StyledGrid container justifyContent=\"space-between\" wrap=\"nowrap\">\n      {prevPagePath ? (\n        <Grid2 item>\n          <Link\n            component={GatsbyLink}\n            rel=\"prev\"\n            to={prevPagePath}\n            variant=\"h6\"\n          >\n            ← {prevPageName ? prevPageName : PAGINATION.PREV_PAGE}\n          </Link>\n        </Grid2>\n      ) : null}\n      {nextPagePath ? (\n        <Grid2 item className={classes.nextNav}>\n          <Link\n            component={GatsbyLink}\n            rel=\"next\"\n            to={nextPagePath}\n            variant=\"h6\"\n          >\n            {nextPageName ? nextPageName : PAGINATION.NEXT_PAGE} →\n          </Link>\n        </Grid2>\n      ) : null}\n    </StyledGrid>\n  );\n};\n\nexport default Pagination;\n"],"names":["_ref","data","pageContext","archivedBlogUrl","useSiteMetadata","prevPagePath","nextPagePath","React","Layout","Box","mb","ArchivedBlogTips","originLink","PostList","nodes","allArchivedBlogPostJson","map","node","fields","slug","path","categorySlugs","categories","category","frontmatter","title","date","name","description","excerpt","featured_media","Pagination","prevPageName","Head","_ref2","siteTitle","currentPage","pageTitle","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardActionAreaRoot","styled","ButtonBase","overridesResolver","props","styles","root","memoTheme","theme","display","textAlign","borderRadius","width","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","CardActionArea","inProps","ref","children","className","focusVisibleClassName","other","ownerState","classes","composeClasses","useUtilityClasses","clsx","getCardUtilityClass","CardRoot","Paper","Card","raised","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","CardContent","component","as","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","image","src","includes","composedStyle","backgroundImage","slots","role","PREFIX","cardActionArea","card","cardDetails","cardMedia","Root","marginBottom","spacing","flex","marginRight","GatsbyLink","to","key","Typography","variant","color","format","Date","getSrc","childImageSharp","gatsbyImageData","sx","xs","sm","createSvgIcon","d","getSnackbarContentUtilityClass","SnackbarContentRoot","emphasis","mode","background","default","typography","body2","SnackbarContent","getContrastText","bg","alignItems","flexWrap","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","message","SnackbarContentAction","marginLeft","paddingLeft","square","useTheme","blue","InfoIcon","fontSize","noWrap","maxWidth","Link","href","target","rel","PREV_PAGE","NEXT_PAGE","nextNav","StyledGrid","Grid2","nextPageName","container","justifyContent","wrap","item","PAGINATION"],"sourceRoot":""}