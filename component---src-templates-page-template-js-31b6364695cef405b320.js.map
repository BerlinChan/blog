{"version":3,"file":"component---src-templates-page-template-js-31b6364695cef405b320.js","mappings":"yJAIA,MAEMA,EACK,kBAGLC,GAAOC,EAAAA,EAAAA,IAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACzC,CAAC,KAAKH,KAAoB,CACxBK,SAAU,WACVC,WAAY,IACZC,gBAAiB,UACjB,MAAO,CACLC,MAAOJ,EAAMK,QAAQC,QAAQC,KAC7BC,eAAgB,SAGrB,IAWD,MATgBC,IAAe,IAAd,KAAEC,GAAMD,EACvB,OACEE,EAAAA,cAACd,EAAI,CACHe,UAAW,iBAAiBhB,IAC5BiB,wBAAyB,CAAEC,OAAQJ,IACnC,C,iICLN,UAdqBX,IAAe,IAAd,KAAEgB,GAAMhB,EAC5B,MAAQW,KAAMM,GAAaD,EAAKE,gBACxBC,MAAOC,GAAcJ,EAAKE,eAAeG,YAEjD,OACET,EAAAA,cAACU,EAAAA,EAAM,CAACC,WAAS,GACfX,EAAAA,cAACY,EAAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAKC,cAAY,GACjDP,GAEHR,EAAAA,cAACgB,EAAAA,EAAO,CAACjB,KAAMM,IACR,EAMN,MAeMY,EAAOnB,IAAe,IAAd,KAAEM,GAAMN,EAC3B,MAAM,QACJoB,EACAX,MAAOY,EACPC,SAAUC,IACRC,EAAAA,EAAAA,OAEFf,MAAOC,EACPe,YAAaC,EAAe,KAC5BC,GACErB,EAAKE,eAAeG,YAClBiB,EAAY,CAChBnB,MAAO,GAAGC,OAAeW,IACzBQ,IAAK,GAAGT,IAAUO,IAClBF,YAAiC,OAApBC,EAA2BA,EAAkBH,EAC1DO,KAAM,WAGR,OACE5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ,GAAGQ,OAAeW,KAC1BnB,EAAAA,cAAC6B,EAAAA,EAAcH,GACd,C,+EC3BP,MA/BmBI,IACjB,MACEvB,MAAOY,EACPY,QAAUC,KAAMC,KACdX,EAAAA,EAAAA,OACE,MAAEf,EAAK,IAAEoB,EAAG,YAAEJ,EAAW,KAAEK,EAAI,MAAEM,GAAUJ,EAEjD,OACE9B,EAAAA,cAAAA,EAAAA,SAAA,KACGuB,GAAevB,EAAAA,cAAA,QAAMgC,KAAK,cAAcG,QAASZ,IAGjDI,GAAO3B,EAAAA,cAAA,QAAMoC,SAAS,SAASD,QAASR,IACzC3B,EAAAA,cAAA,QAAMoC,SAAS,eAAeD,QAAShB,IACtCS,GAAQ5B,EAAAA,cAAA,QAAMoC,SAAS,UAAUD,QAASP,IAC3C5B,EAAAA,cAAA,QAAMoC,SAAS,iBAAiBD,QAASF,IACxC1B,GAASP,EAAAA,cAAA,QAAMoC,SAAS,WAAWD,QAAS5B,IAC5CgB,GAAevB,EAAAA,cAAA,QAAMoC,SAAS,iBAAiBD,QAASZ,IACxDW,GAASlC,EAAAA,cAAA,QAAMoC,SAAS,WAAWD,QAASD,EAAMP,MAClDO,GAASlC,EAAAA,cAAA,QAAMoC,SAAS,sBAAsBD,QAASD,EAAMP,MAC7DO,GAASlC,EAAAA,cAAA,QAAMoC,SAAS,iBAAiBD,QAASD,EAAMG,QACxDH,GAASlC,EAAAA,cAAA,QAAMoC,SAAS,kBAAkBD,QAASD,EAAMI,SAG1DtC,EAAAA,cAAA,QAAMgC,KAAK,eAAeG,QAAQ,wBAClCnC,EAAAA,cAAA,QAAMgC,KAAK,eAAeG,QAAQ,mBAClCnC,EAAAA,cAAA,QAAMgC,KAAK,kBAAkBG,QAAQ,mBACpC,C","sources":["webpack://blog/./src/components/Content/Content.js","webpack://blog/./src/templates/page-template.js","webpack://blog/./src/components/OpenGraph/OpenGraph.js"],"sourcesContent":["import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport \"./github-markdown.css\";\n\nconst PREFIX = \"Content\";\n\nconst classes = {\n  content: `${PREFIX}-content`,\n};\n\nconst Root = styled(\"div\")(({ theme }) => ({\n  [`&.${classes.content}`]: {\n    fontSize: \"1.125rem\",\n    lineHeight: 1.6,\n    backgroundColor: \"initial\",\n    \"& a\": {\n      color: theme.palette.primary.main,\n      textDecoration: \"none\",\n    },\n  },\n}));\n\nconst Content = ({ html }) => {\n  return (\n    <Root\n      className={`markdown-body ${classes.content}`}\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport { useSiteMetadata } from \"../hooks\";\nimport Content from \"../components/Content\";\nimport OpenGraph from \"../components/OpenGraph\";\nimport { Typography } from \"@mui/material\";\n\nconst PageTemplate = ({ data }) => {\n  const { html: pageBody } = data.markdownRemark;\n  const { title: pageTitle } = data.markdownRemark.frontmatter;\n\n  return (\n    <Layout noSidebar>\n      <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n        {pageTitle}\n      </Typography>\n      <Content html={pageBody} />\n    </Layout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query PageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date\n        description\n        slug\n      }\n    }\n  }\n`;\n\nexport const Head = ({ data }) => {\n  const {\n    siteUrl,\n    title: siteTitle,\n    subtitle: siteSubtitle,\n  } = useSiteMetadata();\n  const {\n    title: pageTitle,\n    description: pageDescription,\n    slug,\n  } = data.markdownRemark.frontmatter;\n  const openGraph = {\n    title: `${pageTitle} | ${siteTitle}`,\n    url: `${siteUrl}${slug}`,\n    description: pageDescription !== null ? pageDescription : siteSubtitle,\n    type: \"article\",\n  };\n\n  return (\n    <>\n      <title>{`${pageTitle} - ${siteTitle}`}</title>\n      <OpenGraph {...openGraph} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSiteMetadata } from \"../../hooks\";\n\nconst OpenGraph = (props) => {\n  const {\n    title: siteTitle,\n    author: { name: siteAuthorName },\n  } = useSiteMetadata();\n  const { title, url, description, type, image } = props;\n\n  return (\n    <>\n      {description && <meta name=\"description\" content={description} />}\n\n      {/* Open Graph for Facebook & Twitter */}\n      {url && <meta property=\"og:url\" content={url} />}\n      <meta property=\"og:site_name\" content={siteTitle} />\n      {type && <meta property=\"og:type\" content={type} />}\n      <meta property=\"article:author\" content={siteAuthorName} />\n      {title && <meta property=\"og:title\" content={title} />}\n      {description && <meta property=\"og:description\" content={description} />}\n      {image && <meta property=\"og:image\" content={image.url} />}\n      {image && <meta property=\"og:image:secure_url\" content={image.url} />}\n      {image && <meta property=\"og:image:width\" content={image.width} />}\n      {image && <meta property=\"og:image:height\" content={image.height} />}\n\n      {/*twitter card*/}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@BerlinChanCom\" />\n      <meta name=\"twitter:creator\" content=\"@BerlinChanCom\" />\n    </>\n  );\n};\n\nexport default OpenGraph;\n"],"names":["classes","Root","styled","_ref","theme","fontSize","lineHeight","backgroundColor","color","palette","primary","main","textDecoration","_ref2","html","React","className","dangerouslySetInnerHTML","__html","data","pageBody","markdownRemark","title","pageTitle","frontmatter","Layout","noSidebar","Typography","component","variant","gutterBottom","Content","Head","siteUrl","siteTitle","subtitle","siteSubtitle","useSiteMetadata","description","pageDescription","slug","openGraph","url","type","OpenGraph","props","author","name","siteAuthorName","image","content","property","width","height"],"sourceRoot":""}