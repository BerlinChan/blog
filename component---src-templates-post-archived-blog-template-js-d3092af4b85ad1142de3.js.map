{"version":3,"file":"component---src-templates-post-archived-blog-template-js-d3092af4b85ad1142de3.js","mappings":"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","sources":["webpack://blog/./src/templates/post-archived-blog-template.js","webpack://blog/./node_modules/@mui/icons-material/esm/Info.js","webpack://blog/./node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","webpack://blog/./node_modules/@mui/material/SnackbarContent/SnackbarContent.js","webpack://blog/./src/components/ArchivedBlogTips/ArchivedBlogTips.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport { useSiteMetadata } from \"../hooks\";\nimport ArchivedBlogTips from \"../components/ArchivedBlogTips\";\nimport Post from \"../components/Post\";\nimport Comments from \"../components/Comments\";\nimport Content from \"../components/Content\";\nimport OpenGraph from \"../components/OpenGraph\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport { Box } from \"@mui/material\";\n\nconst PostTemplate = ({ data }) => {\n  const { archivedBlogUrl } = useSiteMetadata();\n  const {\n    title: postTitle,\n    excerpt: postDescription,\n    content,\n    path,\n    date,\n    tags,\n    categories,\n  } = data.archivedBlogPostJson;\n\n  return (\n    <Layout>\n      <Post\n        isArchivedBlogPost\n        post={{\n          frontmatter: {\n            slug: path,\n            title: postTitle,\n            date: date,\n            categories: (categories || []).map((category) => category.name),\n            description: postDescription,\n            tags: (tags || []).map((tag) => tag.name),\n          },\n          fields: {\n            categorySlugs: (categories || []).map((category) => category.path),\n            tagSlugs: (tags || []).map((tag) => tag.path),\n          },\n        }}\n      >\n        <Content html={content} />\n      </Post>\n      <Box mt={3}>\n        <ArchivedBlogTips originLink={`${archivedBlogUrl}${path}`} />\n      </Box>\n      <Comments postSlug={path} postTitle={postTitle} />\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const query = graphql`\n  query ArchivedBlogPostByPath($slug: String!) {\n    archivedBlogPostJson(path: { eq: $slug }) {\n      categories {\n        path\n        name\n      }\n      tags {\n        name\n        path\n      }\n      featured_media {\n        childImageSharp {\n          gatsbyImageData(\n            width: 800\n            height: 400\n            placeholder: BLURRED\n            layout: FIXED\n          )\n        }\n      }\n      path\n      date\n      excerpt\n      title\n      content\n    }\n  }\n`;\n\nexport const Head = ({ data }) => {\n  const {\n    siteUrl,\n    title: siteTitle,\n    subtitle: siteSubtitle,\n  } = useSiteMetadata();\n  const {\n    title: postTitle,\n    excerpt: postDescription,\n    path,\n    featured_media,\n  } = data.archivedBlogPostJson;\n  const openGraph = {\n    title: `${postTitle} | ${siteTitle}`,\n    url: `${siteUrl}${path}`,\n    description: postDescription !== null ? postDescription : siteSubtitle,\n    type: \"article\",\n  };\n  if (featured_media) {\n    openGraph.image = {\n      url: `${siteUrl}${getSrc(\n        featured_media.childImageSharp.gatsbyImageData\n      )}`,\n      width: featured_media.childImageSharp.gatsbyImageData.width,\n      height: featured_media.childImageSharp.gatsbyImageData.height,\n    };\n  }\n\n  return (\n    <>\n      <title>{`${postTitle} - ${siteTitle}`}</title>\n      <OpenGraph {...openGraph} />\n    </>\n  );\n};\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getSnackbarContentUtilityClass } from \"./snackbarContentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    ...theme.typography.body2,\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  };\n}));\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n    action,\n    className,\n    message,\n    role = 'alert',\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, {\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Link from \"@mui/material/Link\";\nimport SnackbarContent from \"@mui/material/SnackbarContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { blue } from \"@mui/material/colors\";\nimport { useTheme } from \"@mui/material/styles\";\n\nconst ArchivedBlogTips = ({ originLink }) => {\n  const theme = useTheme();\n\n  return (\n    <SnackbarContent\n      elevation={0}\n      sx={{\n        display: \"block\",\n        backgroundColor: blue[500],\n      }}\n      message={\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <InfoIcon\n            sx={{\n              fontSize: 20,\n              opacity: 0.9,\n              marginRight: theme.spacing(1),\n            }}\n          />\n          <Typography variant={\"body2\"} noWrap sx={{ maxWidth: \"90%\" }}>\n            {\"这是旧博客文章存档，原页面: \"}\n            <Link\n              href={originLink}\n              target={\"_blank\"}\n              rel=\"noopener\"\n              color={\"inherit\"}\n            >\n              {originLink}\n            </Link>\n          </Typography>\n        </Box>\n      }\n    />\n  );\n};\n\nexport default ArchivedBlogTips;\n"],"names":["_ref","data","archivedBlogUrl","useSiteMetadata","title","postTitle","excerpt","postDescription","content","path","date","tags","categories","archivedBlogPostJson","React","Layout","Post","isArchivedBlogPost","post","frontmatter","slug","map","category","name","description","tag","fields","categorySlugs","tagSlugs","Content","html","Box","mt","ArchivedBlogTips","originLink","Comments","postSlug","Head","_ref2","siteUrl","siteTitle","subtitle","siteSubtitle","featured_media","openGraph","url","type","image","getSrc","childImageSharp","gatsbyImageData","width","height","OpenGraph","createSvgIcon","d","getSnackbarContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","SnackbarContentRoot","styled","Paper","overridesResolver","props","styles","root","memoTheme","theme","emphasis","palette","mode","backgroundColor","background","default","typography","body2","color","vars","SnackbarContent","getContrastText","bg","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","message","SnackbarContentAction","action","marginLeft","paddingLeft","marginRight","inProps","ref","className","role","other","ownerState","classes","composeClasses","useUtilityClasses","square","elevation","clsx","children","useTheme","sx","blue","InfoIcon","fontSize","opacity","spacing","Typography","variant","noWrap","maxWidth","Link","href","target","rel"],"sourceRoot":""}